Word Scramble Game

1. Player 1 Enters a Word
   o Player 1 enters a word (e.g., apple) into a text box.
   o After submitting, the screen clears, and the program
   scrambles the word.
   â–ª Example: "The scrambled word is: pleap. Guess the original
   word!"
2. Player 2 Guesses the Word
   o Player 2 sees the scrambled word and a prompt to guess
   the original word.
   o The program compares the guess with the original word.
3. Feedback Example
   o Original Word: apple
   o Scrambled Word: pleap
   o Player Guess: peach
   o The program says:
   "Incorrect! Try again."
   o If the guess is correct:
   "Congratulations! You guessed the word."
4. Game Continues Until Correct
   o Player 2 keeps guessing until they guess the exact word

Tips for Writing Your Program
Here are tips and commonly used C# string and array operations that will be helpful for
these projects:
General String Manipulation

1. Splitting and Joining Strings:
   o Use .Split() to break a string into parts (e.g., for Caesar Cipher).
   o Use string.Join() to combine parts into a single string.
   string[] words = "apple orange banana".Split(' ');
   string combined = string.Join("-", words); // Output:
   "apple-orange-banana"
2. Iterating Through Characters:
   o Use a foreach loop or for loop to process each character in a string.
   foreach (char c in "HELLO")
   {
   Console.WriteLine(c);
   }
3. Comparing Strings:
   o Use .Equals() for case-sensitive comparison.
   o Use .ToLower() or .ToUpper() to normalize strings for comparison.
   string input = "HELLO";
   if (input.ToUpper() == "HELLO")
   Console.WriteLine("Match!");
4. Reversing or Scrambling:
   o Use .ToCharArray() to convert a string to a character array, then shuffle or
   reverse it.
   char[] arr = "apple".ToCharArray();
   Array.Reverse(arr);
   string reversed = new string(arr); // Output: "elppa"
   Number Manipulation
5. Extracting Digits:
   o Convert numbers to strings and back to split them into individual digits.
   int number = 201;
   char[] digits = number.ToString().ToCharArray(); // ['2',
   '0', '1']
6. Converting Between Numbers and Strings:
   o Use int.Parse() or Convert.ToInt32() to convert strings to numbers.
   o Use .ToString() to convert numbers to strings.
   int num = int.Parse("123"); // 123
   string str = num.ToString(); // "123"
   Project-Specific Tips
   Word Scramble:
   o Use .ToCharArray() and Random to shuffle characters for scrambling.
   char[] arr = word.ToCharArray();
   Random rand = new Random();
   arr = arr.OrderBy(x => rand.Next()).ToArray();
   string scrambled = new string(arr)
